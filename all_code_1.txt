

================================================================================
Ф: C:\Users\yatma\Documents\Daytona-main + Huawei\static\css\styles.css
: 19532 bytes
Т : 04/11/2025 23:22:18
================================================================================


/* Общие стили */
:root {
    --primary: #4361ee;
    --primary-light: #e0e7ff;
    --success: #2ecc71;
    --warning: #f39c12;
    --danger: #e74c3c;
    --dark: #2c3e50;
    --light: #ecf0f1;
    --gray: #95a5a6;
    --sidebar-width: 250px;
    --submenu-width: 200px;
}

/* Добавим стили для подменю */
.menu-item.has-submenu {
    position: relative;
}

.submenu {
    display: none;
    position: absolute;
    left: var(--sidebar-width);
    top: 0;
    width: var(--submenu-width);
    background-color: var(--dark);
    border-radius: 0 8px 8px 0;
    box-shadow: 2px 2px 5px rgba(0,0,0,0.2);
    z-index: 100;
}

.menu-item.has-submenu:hover .submenu {
    display: block;
}

.submenu .menu-item {
    padding: 10px 15px;
    border-bottom: 1px solid rgba(255,255,255,0.1);
}


* {
    box-sizing: border-box;
    margin: 0;
    padding: 0;
    font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
}

body {
    background-color: #f5f7fa;
    color: #333;
    line-height: 1.6;
    display: flex;
    min-height: 100vh;
}

/* Сайдбар */
.sidebar {
    width: var(--sidebar-width);
    background-color: var(--dark);
    color: white;
    padding: 20px 0;
    height: 100vh;
    position: fixed;
    box-shadow: 2px 0 5px rgba(0,0,0,0.1);
}

.sidebar-header {
    padding: 0 20px 20px;
    border-bottom: 1px solid rgba(255,255,255,0.1);
}

.sidebar-menu {
    list-style: none;
}

.menu-item {
    padding: 12px 20px;
    transition: all 0.3s;
}

.menu-item:hover {
    background-color: rgba(255,255,255,0.1);
}

.menu-item a {
    color: white;
    text-decoration: none;
    display: block;
}

.menu-item.active {
    background-color: var(--primary);
}

/* Основное содержимое */
.main-content {
    margin-left: var(--sidebar-width);
    flex: 1;
    padding: 20px;
}

.container {
    max-width: 1200px;
    margin: 0 auto;
}

/* Карточки */
.card {
    background: white;
    border-radius: 8px;
    box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
    padding: 25px;
    margin-bottom: 30px;
}

/* Таблицы */
.interface-table {
    width: 100%;
    border-collapse: collapse;
    margin-top: 20px;
}

.interface-table th {
    background-color: var(--dark);
    color: white;
    padding: 12px 15px;
    text-align: left;
}

.interface-table td {
    padding: 10px 15px;
    border-bottom: 1px solid #eee;
}

.interface-table tr:hover {
    background-color: #f5f5f5;
}

/* Статусы */
.status-up {
    color: var(--success);
    font-weight: bold;
}

.status-down {
    color: var(--danger);
    font-weight: bold;
}

.status-disabled {
    color: var(--gray);
    font-weight: bold;
}

/* Кнопки */
.btn {
    display: inline-block;
    padding: 10px 20px;
    background-color: var(--primary);
    color: white;
    text-decoration: none;
    border-radius: 6px;
    transition: all 0.3s;
    border: none;
    cursor: pointer;
}

.btn:hover {
    background-color: #3a56d4;
    transform: translateY(-2px);
    box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
}

/* Заголовки */
h1, h2, h3 {
    margin-bottom: 15px;
}

h1 {
    font-size: 1.8rem;
}

h2 {
    font-size: 1.4rem;
    color: var(--dark);
    padding-bottom: 10px;
    border-bottom: 1px solid #eee;
}
.monitoring-section {
    margin-bottom: 30px;
}

.section-title {
    color: var(--dark);
    margin-bottom: 20px;
    display: flex;
    align-items: center;
    gap: 10px;
}

.metrics-grid {
    display: grid;
    grid-template-columns: repeat(auto-fit, minmax(300px, 1fr));
    gap: 20px;
}

.metric-card {
    background: white;
    border-radius: 12px;
    padding: 20px;
    box-shadow: 0 4px 6px rgba(0, 0, 0, 0.05);
    transition: transform 0.3s;
}

.metric-card:hover {
    transform: translateY(-5px);
}

.metric-header {
    display: flex;
    align-items: center;
    gap: 10px;
    margin-bottom: 15px;
}

.metric-header i {
    font-size: 1.5rem;
    color: var(--primary);
}

.metric-value {
    font-size: 2rem;
    font-weight: bold;
    margin: 10px 0;
}

.metric-percent {
    font-size: 1rem;
    color: var(--gray);
}

.metric-progress {
    height: 8px;
    background: #f0f0f0;
    border-radius: 4px;
    margin: 15px 0;
    overflow: hidden;
}

.progress-bar {
    height: 100%;
    background: var(--primary);
    border-radius: 4px;
}

.metric-footer {
    display: flex;
    justify-content: space-between;
    color: var(--gray);
    font-size: 0.9rem;
}

.metric-trend {
    font-weight: bold;
}

.metric-trend.up {
    color: var(--success);
}

.metric-trend.down {
    color: var(--danger);
}

/* Специфичные стили для карточек */
.cpu-card .progress-bar {
    background: linear-gradient(90deg, #4361ee, #3a0ca3);
}

.memory-card .progress-bar {
    background: linear-gradient(90deg, #2ecc71, #27ae60);
}

.temp-card .progress-bar {
    background: linear-gradient(90deg, #e74c3c, #c0392b);
}

/* Стили для информационных карточек */
.info-grid {
    display: grid;
    grid-template-columns: repeat(auto-fit, minmax(250px, 1fr));
    gap: 20px;
}

.info-card {
    background: white;
    border-radius: 12px;
    padding: 20px;
    display: flex;
    gap: 15px;
    align-items: center;
    box-shadow: 0 4px 6px rgba(0, 0, 0, 0.05);
}

.info-icon i {
    font-size: 1.8rem;
    color: var(--primary);
    background: var(--primary-light);
    width: 50px;
    height: 50px;
    display: flex;
    align-items: center;
    justify-content: center;
    border-radius: 50%;
}

.info-content h3 {
    margin: 0 0 5px 0;
    font-size: 1.1rem;
}

.info-content p {
    margin: 0;
    color: var(--dark);
    font-size: 1rem;
}

/* Адаптивность */
@media (max-width: 768px) {
    .metrics-grid, .info-grid {
        grid-template-columns: 1fr;
    }
}
/* static/css/styles.css */
.metrics-grid {
    display: grid;
    grid-template-columns: repeat(auto-fit, minmax(300px, 1fr));
    gap: 20px;
    margin: 20px 0;
}

.metric-card {
    background: white;
    border-radius: 12px;
    padding: 20px;
    box-shadow: 0 4px 6px rgba(0, 0, 0, 0.05);
}

.metric-header {
    display: flex;
    align-items: center;
    gap: 10px;
    margin-bottom: 15px;
}

.metric-header i {
    font-size: 1.5rem;
    color: #4361ee;
}

.metric-value {
    font-size: 2rem;
    font-weight: bold;
    margin: 10px 0;
}

.metric-progress {
    height: 8px;
    background: #f0f0f0;
    border-radius: 4px;
    margin: 15px 0;
    overflow: hidden;
}

.progress-bar {
    height: 100%;
    background: #4361ee;
    border-radius: 4px;
    transition: width 0.5s ease;
}

.metric-footer {
    display: flex;
    justify-content: space-between;
    color: #95a5a6;
    font-size: 0.9rem;
}

/* Адаптивность */
@media (max-width: 768px) {
    .metrics-grid {
        grid-template-columns: 1fr;
    }
}
/* Стили для модального окна */
.modal {
    display: none;
    position: fixed;
    z-index: 1000;
    left: 0;
    top: 0;
    width: 100%;
    height: 100%;
    background-color: rgba(0,0,0,0.5);
}

.modal-content {
    background-color: #fff;
    margin: 5% auto;
    padding: 25px;
    border-radius: 8px;
    width: 50%;
    max-width: 600px;
    box-shadow: 0 4px 20px rgba(0,0,0,0.2);
    position: relative;
}

.close {
    position: absolute;
    right: 20px;
    top: 15px;
    font-size: 28px;
    cursor: pointer;
    color: #aaa;
}

.close:hover {
    color: #333;
}

/* Стили формы */
.form-group {
    margin-bottom: 20px;
}

.form-group label {
    display: block;
    margin-bottom: 8px;
    font-weight: 500;
}

.form-group input,
.form-group select {
    width: 100%;
    padding: 10px;
    border: 1px solid #ddd;
    border-radius: 4px;
    font-size: 16px;
}

.form-actions {
    display: flex;
    justify-content: flex-end;
    gap: 10px;
    margin-top: 20px;
}

.btn-edit {
    background-color: var(--warning);
    color: white;
    border: none;
    padding: 8px 12px;
    border-radius: 4px;
    cursor: pointer;
    font-size: 14px;
}

.btn-edit:hover {
    background-color: #e67e22;
}

/* Кнопки формы */
.btn-save {
    background-color: var(--success);
    color: white;
}

.btn-cancel {
    background-color: var(--gray);
    color: white;
}
.sidebar-header {
    padding: 20px;
    border-bottom: 1px solid rgba(255,255,255,0.1);
    display: flex;
    align-items: center;
    gap: 15px;
}

.sidebar-logo {
    height: 40px; /* Регулируйте по необходимости */
    width: auto;
    object-fit: contain;
}
/* Стили для деталей интерфейса */
.interface-details-container {
    margin-top: 25px;
    display: grid;
    grid-template-columns: repeat(auto-fill, minmax(350px, 1fr));
    gap: 20px;
}

.interface-detail-card {
    background: white;
    border-radius: 12px;
    padding: 25px;
    box-shadow: 0 4px 12px rgba(0, 0, 0, 0.08);
    transition: transform 0.3s ease, box-shadow 0.3s ease;
}

.interface-detail-card:hover {
    transform: translateY(-5px);
    box-shadow: 0 6px 16px rgba(0, 0, 0, 0.12);
}

.detail-section {
    margin-bottom: 20px;
}

.detail-section-title {
    font-size: 1.1rem;
    color: var(--primary);
    margin-bottom: 15px;
    padding-bottom: 8px;
    border-bottom: 2px solid var(--primary-light);
    display: flex;
    align-items: center;
    gap: 10px;
}

.detail-grid {
    display: grid;
    grid-template-columns: 140px 1fr;
    gap: 12px;
}

.detail-label {
    font-weight: 600;
    color: var(--dark);
    opacity: 0.8;
    font-size: 0.9rem;
}

.detail-value {
    font-weight: 500;
    color: var(--dark);
    word-break: break-word;
}

.status-badge {
    display: inline-block;
    padding: 4px 10px;
    border-radius: 20px;
    font-size: 0.8rem;
    font-weight: 600;
    text-transform: uppercase;
}

.status-up {
    background-color: var(--success-light);
    color: var(--success-dark);
}

.status-down {
    background-color: var(--danger-light);
    color: var(--danger-dark);
}

/* Добавьте в :root */
:root {
    --success-light: #d5f5e3;
    --success-dark: #28a745;
    --danger-light: #fadbd8;
    --danger-dark: #e74c3c;
    --primary-light: #e0e7ff;
    --primary-dark: #4361ee;
}
.vlan-table td:nth-child(7) {  /* 7-й столбец - Порты */
    font-family: monospace;
    font-size: 0.9em;
    white-space: nowrap;
    max-width: 200px;
    overflow: hidden;
    text-overflow: ellipsis;
}
/* Стили для портов */
.ports-cell {
    max-width: 250px;
    position: relative;
}

.ports-list {
    display: flex;
    flex-wrap: wrap;
    gap: 5px;
    padding: 3px;
    transition: max-height 0.3s ease;
}

.ports-list.collapsed {
    max-height: 60px;
    overflow: hidden;
}

.port-badge {
    display: inline-block;
    padding: 2px 6px;
    background-color: var(--primary-light);
    border-radius: 3px;
    font-size: 0.8em;
    font-family: monospace;
    white-space: nowrap;
}

.show-more {
    color: var(--primary);
    cursor: pointer;
    display: block;
    text-align: center;
    margin-top: 3px;
    user-select: none;
}

/* Полоса прокрутки */
.ports-list::-webkit-scrollbar {
    width: 6px;
}

.ports-list::-webkit-scrollbar-thumb {
    background-color: var(--gray);
    border-radius: 3px;
}

/* Стили для страницы деталей VLAN */
.port-badge {
    display: inline-block;
    padding: 5px 10px;
    background-color: var(--primary-light);
    border-radius: 4px;
    margin: 3px;
    font-family: monospace;
    font-size: 0.85em;
}

.ports-container {
    display: flex;
    flex-wrap: wrap;
    gap: 5px;
    max-height: 200px;
    overflow-y: auto;
    padding: 5px;
}

/* Анимация загрузки */
@keyframes fadeIn {
    from { opacity: 0; transform: translateY(10px); }
    to { opacity: 1; transform: translateY(0); }
}

.vlan-detail-card {
    animation: fadeIn 0.3s ease-out;
}

/* Адаптивность */
@media (max-width: 768px) {
    .vlan-details-container {
        grid-template-columns: 1fr;
    }
    
    .detail-grid {
        grid-template-columns: 120px 1fr;
    }
}
/* Стили для страницы деталей VLAN */
.loading-spinner {
    grid-column: 1 / -1;
    text-align: center;
    padding: 40px;
    color: var(--primary);
}

.loading-spinner i {
    margin-right: 10px;
}

.error-message {
    grid-column: 1 / -1;
    background: var(--danger-light);
    color: var(--danger-dark);
    padding: 20px;
    border-radius: 8px;
    text-align: center;
}

.error-message i {
    margin-right: 10px;
    font-size: 1.2em;
}

/* Анимации */
@keyframes fadeIn {
    from { opacity: 0; transform: translateY(10px); }
    to { opacity: 1; transform: translateY(0); }
}

.vlan-detail-card {
    animation: fadeIn 0.3s ease-out forwards;
    opacity: 0;
}

.vlan-detail-card:nth-child(1) { animation-delay: 0.1s; }
.vlan-detail-card:nth-child(2) { animation-delay: 0.2s; }
.vlan-detail-card:nth-child(3) { animation-delay: 0.3s; }

.loading-spinner {
    grid-column: 1 / -1;
    text-align: center;
    padding: 40px;
    color: var(--primary);
    font-size: 1.1rem;
}

.loading-spinner i {
    margin-right: 10px;
}

.error-message {
    grid-column: 1 / -1;
    background: var(--danger-light);
    color: var(--danger-dark);
    padding: 15px;
    border-radius: 8px;
    margin-bottom: 20px;
    display: flex;
    align-items: center;
    justify-content: center;
}

.error-message i {
    margin-right: 10px;
    font-size: 1.2em;
}

.port-badge.loading-text {
    color: var(--gray);
    font-style: italic;
}
.loading-spinner {
    position: fixed;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
    background: rgba(255, 255, 255, 0.9);
    padding: 20px;
    border-radius: 8px;
    box-shadow: 0 2px 10px rgba(0, 0, 0, 0.1);
    z-index: 1000;
    display: none;
}

.error-message {
    grid-column: 1 / -1;
    background: var(--danger-light);
    color: var(--danger-dark);
    padding: 15px;
    border-radius: 8px;
    margin: 10px 0;
    display: none;
    align-items: center;
}

.error-message i {
    margin-right: 10px;
}

.port-badge {
    opacity: 0;
    animation: fadeIn 0.5s ease-out forwards;
    animation-delay: calc(var(--index) * 0.1s);
}

@keyframes fadeIn {
    from { opacity: 0; transform: translateY(5px); }
    to { opacity: 1; transform: translateY(0); }
}
/* Стили для модального окна */
.modal {
    display: none;
    position: fixed;
    z-index: 1000;
    left: 0;
    top: 0;
    width: 100%;
    height: 100%;
    background-color: rgba(0,0,0,0.5);
}

.modal-content {
    background-color: #fff;
    margin: 5% auto;
    padding: 25px;
    border-radius: 8px;
    width: 50%;
    max-width: 500px;
    box-shadow: 0 4px 20px rgba(0,0,0,0.2);
}

.close {
    position: absolute;
    right: 20px;
    top: 15px;
    font-size: 28px;
    cursor: pointer;
    color: #aaa;
}

.close:hover {
    color: #333;
}

/* Стили для формы */
.form-group {
    margin-bottom: 20px;
}

.form-group label {
    display: block;
    margin-bottom: 8px;
    font-weight: 500;
}

.form-group input,
.form-group select {
    width: 100%;
    padding: 10px;
    border: 1px solid #ddd;
    border-radius: 4px;
    font-size: 16px;
}

.form-actions {
    display: flex;
    justify-content: flex-end;
    gap: 10px;
    margin-top: 20px;
}

/* Стили для уведомлений */
.alert {
    padding: 12px 20px;
    border-radius: 4px;
    margin-bottom: 20px;
    display: flex;
    justify-content: space-between;
    align-items: center;
    box-shadow: 0 2px 10px rgba(0,0,0,0.1);
}

.alert-success {
    background-color: #e8f5e9;
    color: #2e7d32;
    border-left: 4px solid #2e7d32;
}

.alert-error {
    background-color: #ffebee;
    color: #c62828;
    border-left: 4px solid #c62828;
}

.alert button {
    background: none;
    border: none;
    font-size: 18px;
    cursor: pointer;
    color: inherit;
    opacity: 0.7;
}

/* Стили для таблицы коммутации */
.mac-table {
    width: 100%;
    border-collapse: collapse;
    margin-top: 20px;
}

.mac-table th {
    background-color: var(--dark);
    color: white;
    padding: 12px 15px;
    text-align: left;
}

.mac-table td {
    padding: 10px 15px;
    border-bottom: 1px solid #eee;
}

.mac-table tr:hover {
    background-color: #f5f5f5;
}

.vlan-badge {
    display: inline-block;
    padding: 3px 8px;
    border-radius: 12px;
    background-color: var(--primary-light);
    color: var(--primary-dark);
    font-size: 0.8em;
    font-weight: bold;
}

.mac-address {
    font-family: monospace;
    font-weight: bold;
}

.port-status {
    display: inline-block;
    width: 10px;
    height: 10px;
    border-radius: 50%;
    margin-right: 8px;
}

.port-status.up {
    background-color: var(--success);
}

.port-status.down {
    background-color: var(--danger);
}

.age-header {
    cursor: pointer;
}

.age-header:hover {
    text-decoration: underline;
}

/* Стили для ARP таблицы */
.arp-table {
    width: 100%;
    border-collapse: collapse;
    margin-top: 20px;
}

.arp-table th {
    background-color: var(--dark);
    color: white;
    padding: 12px 15px;
    text-align: left;
}

.arp-table td {
    padding: 10px 15px;
    border-bottom: 1px solid #eee;
}

.arp-table tr:hover {
    background-color: #f5f5f5;
}

.ip-address {
    font-weight: bold;
    font-family: monospace;
}

.mac-address {
    font-family: monospace;
    font-weight: bold;
}

.interface-chip {
    display: inline-block;
    padding: 3px 8px;
    border-radius: 4px;
    background-color: var(--primary-light);
    color: var(--primary-dark);
    font-size: 0.85em;
}

.type-badge {
    display: inline-block;
    padding: 3px 8px;
    border-radius: 12px;
    font-size: 0.8em;
    font-weight: bold;
}

.type-dynamic {
    background-color: #e8f5e9;
    color: var(--success-dark);
}

.type-static {
    background-color: #e3f2fd;
    color: var(--primary-dark);
}

.type-incomplete {
    background-color: #ffebee;
    color: var(--danger-dark);
}

.age-badge {
    display: inline-block;
    padding: 3px 8px;
    border-radius: 12px;
    background-color: #f0f0f0;
    font-size: 0.8em;
}

.filter-controls {
    display: flex;
    gap: 10px;
    margin-bottom: 15px;
}

.filter-input {
    padding: 8px 12px;
    border: 1px solid #ddd;
    border-radius: 4px;
    flex-grow: 1;
    max-width: 300px;
}


================================================================================
Ф: C:\Users\yatma\Documents\Daytona-main + Huawei\templates\arp_table.html
: 10998 bytes
Т : 04/11/2025 23:21:41
================================================================================


<!DOCTYPE html>
<html lang="ru">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>ARP таблица</title>
    <link rel="stylesheet" href="{{ url_for('static', filename='css/styles.css') }}">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.15.4/css/all.min.css">
    <style>
        .arp-table {
            width: 100%;
            border-collapse: collapse;
            margin-top: 20px;
            font-size: 0.9em;
        }
        
        .arp-table th {
            background-color: var(--primary);
            color: white;
            padding: 12px 15px;
            text-align: left;
            position: sticky;
            top: 0;
        }
        
        .arp-table td {
            padding: 10px 15px;
            border-bottom: 1px solid #eee;
            font-family: monospace;
        }
        
        .arp-table tr:hover {
            background-color: #f5f7fa;
        }
        
        .ip-address {
            font-weight: bold;
        }
        
        .mac-address {
            font-family: monospace;
            font-weight: bold;
        }
        
        .interface-chip {
            display: inline-block;
            padding: 3px 8px;
            border-radius: 4px;
            background-color: var(--primary-light);
            color: var(--primary-dark);
            font-size: 0.85em;
        }
        
        .age-badge {
            display: inline-block;
            padding: 3px 8px;
            border-radius: 12px;
            background-color: #f0f0f0;
            font-size: 0.8em;
        }
        
        .type-badge {
            display: inline-block;
            padding: 3px 8px;
            border-radius: 12px;
            font-size: 0.8em;
            font-weight: bold;
        }
        
        .type-dynamic { background-color: #e8f5e9; color: var(--success-dark); }
        .type-static { background-color: #e3f2fd; color: var(--primary-dark); }
        .type-incomplete { background-color: #ffebee; color: var(--danger-dark); }
        
        .device-info-header {
            display: flex;
            justify-content: space-between;
            align-items: center;
            margin-bottom: 20px;
        }
        
        .last-update {
            margin-top: 15px;
            font-size: 0.9em;
            color: var(--gray);
            text-align: right;
        }
        
        .empty-table {
            text-align: center;
            padding: 30px;
            color: var(--gray);
            font-style: italic;
        }
        
        .filter-controls {
            display: flex;
            gap: 10px;
            margin-bottom: 15px;
            align-items: center;
        }
        
        .filter-input {
            padding: 8px 12px;
            border: 1px solid #ddd;
            border-radius: 4px;
            flex-grow: 1;
            max-width: 300px;
        }
    </style>
</head>
<body>
    <!-- Боковое меню -->
    <div class="sidebar">
        <div class="sidebar-header">
            <img src="{{ url_for('static', filename='images/daytona_logo.png') }}" alt="Daytona Logo" class="sidebar-logo">
            <h2>Меню</h2>
        </div>
        <ul class="sidebar-menu">
            <li class="menu-item">
                <a href="/device-status"><i class="fas fa-tachometer-alt"></i> Обзор системы</a>
            </li>
            <li class="menu-item">
                <a href="/interfaces"><i class="fas fa-network-wired"></i> Интерфейсы</a>
            </li>
            <li class="menu-item has-submenu">
                <a href="#"><i class="fas fa-table"></i> Вывод таблиц</a>
                <ul class="submenu">
                    <li class="menu-item">
                        <a href="/routing-table"><i class="fas fa-route"></i> Маршрутизации</a>
                    </li>
                    <li class="menu-item">
                        <a href="/mac-table"><i class="fas fa-ethernet"></i> Коммутации</a>
                    </li>
                    <li class="menu-item active">
                        <a href="/arp-table"><i class="fas fa-address-book"></i> ARP</a>
                    </li>
                </ul>
            </li>
            <li class="menu-item">
                <a href="/vlan-info"><i class="fas fa-sitemap"></i> VLAN</a>
            </li>
        </ul>
    </div>

    <!-- Основное содержимое -->
    <div class="main-content">
        <div class="container">
            <header class="dashboard-header">
                <h1 class="dashboard-title">
                    <i class="fas fa-address-book"></i> ARP таблица
                    <span class="device-ip">{{ device_info.ip_address }}</span>
                </h1>
                <div class="dashboard-actions">
                    <a href="/refresh-arp-table" class="btn btn-refresh">
                        <i class="fas fa-sync-alt"></i> Обновить
                    </a>
                </div>
            </header>

            <!-- Информация об устройстве -->
            <div class="card">
                <div class="device-info-header">
                    <h2><i class="fas fa-info-circle"></i> Информация об устройстве</h2>
                </div>
                <div class="detail-grid" style="grid-template-columns: 150px 1fr 150px 1fr;">
                    <div class="detail-label">Модель:</div>
                    <div class="detail-value">{{ device_info.model }}</div>
                    
                    <div class="detail-label">Версия ПО:</div>
                    <div class="detail-value">{{ device_info.software_version }}</div>
                    
                    <div class="detail-label">IP-адрес:</div>
                    <div class="detail-value">{{ device_info.ip_address }}</div>
                    
                    <div class="detail-label">Время работы:</div>
                    <div class="detail-value">{{ device_info.uptime }}</div>
                </div>
            </div>

            <!-- Таблица ARP -->
            <div class="card">
                <h2><i class="fas fa-table"></i> Таблица ARP</h2>
                
                <div class="filter-controls">
                    <input type="text" id="arpFilter" class="filter-input" placeholder="Фильтр по IP или MAC..." onkeyup="filterArpTable()">
                    <select id="typeFilter" class="filter-input" onchange="filterArpTable()">
                        <option value="">Все типы</option>
                        <option value="dynamic">Dynamic</option>
                        <option value="static">Static</option>
                        <option value="incomplete">Incomplete</option>
                    </select>
                </div>
                
                {% if arp_table %}
                <table class="arp-table" id="arpTable">
                    <thead>
                        <tr>
                            <th>IP-адрес</th>
                            <th>MAC-адрес</th>
                            <th>Интерфейс</th>
                            <th>Тип</th>
                            <th>Возраст</th>
                        </tr>
                    </thead>
                    <tbody>
                        {% for entry in arp_table %}
                        <tr class="arp-entry" data-type="{{ entry.type|lower }}">
                            <td class="ip-address">{{ entry.ip_address }}</td>
                            <td class="mac-address">{{ entry.mac_address }}</td>
                            <td><span class="interface-chip">{{ entry.interface }}</span></td>
                            <td>
                                <span class="type-badge type-{{ entry.type|lower }}">
                                    {{ entry.type }}
                                </span>
                            </td>
                            <td>
                                <span class="age-badge" title="Обновлено {{ entry.last_update }}">
                                    {{ entry.age }}
                                </span>
                            </td>
                        </tr>
                        {% endfor %}
                    </tbody>
                </table>
                {% else %}
                <div class="empty-table">
                    <i class="fas fa-info-circle"></i> ARP таблица пуста или не может быть загружена
                </div>
                {% endif %}
                
                <div class="last-update">
                    <i class="fas fa-clock"></i> Последнее обновление: {{ last_update }}
                    <span id="totalArpCount" style="margin-left: 20px;">Всего записей: {{ arp_table|length if arp_table else 0 }}</span>
                    <span id="filteredArpCount" style="margin-left: 20px;"></span>
                </div>
            </div>
        </div>
    </div>

    <script>
        // Фильтрация таблицы ARP
        function filterArpTable() {
            const filter = document.getElementById('arpFilter').value.toUpperCase();
            const typeFilter = document.getElementById('typeFilter').value;
            const rows = document.querySelectorAll('#arpTable tbody tr.arp-entry');
            let visibleCount = 0;
            
            rows.forEach(row => {
                const ip = row.querySelector('.ip-address').textContent.toUpperCase();
                const mac = row.querySelector('.mac-address').textContent.toUpperCase();
                const type = row.getAttribute('data-type');
                
                const matchesFilter = ip.includes(filter) || mac.includes(filter);
                const matchesType = !typeFilter || type === typeFilter;
                
                if (matchesFilter && matchesType) {
                    row.style.display = '';
                    visibleCount++;
                } else {
                    row.style.display = 'none';
                }
            });
            
            document.getElementById('filteredArpCount').textContent = `Отфильтровано: ${visibleCount}`;
        }
        
        // Инициализация фильтра при загрузке
        document.addEventListener('DOMContentLoaded', () => {
            filterArpTable();
        });
    </script>
</body>
</html>


================================================================================
Ф: C:\Users\yatma\Documents\Daytona-main + Huawei\templates\device_status.html
: 8712 bytes
Т : 04/11/2025 23:02:29
================================================================================


<!DOCTYPE html>
<html lang="ru">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Состояние устройства - {{ device_data.device_type }}</title>
    <link rel="stylesheet" href="{{ url_for('static', filename='css/styles.css') }}">
    <style>
        /* Временные inline-стили для примера */
        .metric-card {
            background: white;
            border-radius: 12px;
            padding: 20px;
            box-shadow: 0 4px 6px rgba(0, 0, 0, 0.05);
        }
        .progress-bar {
            height: 8px;
            background: #4361ee;
            border-radius: 4px;
        }
    </style>
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.15.4/css/all.min.css">
</head>
<body>
    <!-- Боковое меню -->
    <div class="sidebar">
        <div class="sidebar-header">
            <img src="{{ url_for('static', filename='images/daytona_logo.png') }}" alt="Daytona Logo" class="sidebar-logo">
            <h2>Меню</h2>
        </div>
        <ul class="sidebar-menu">
            <li class="menu-item active">
                <a href="/device-status">Обзор системы</a>
            </li>
            <li class="menu-item">
                <a href="/interfaces">Интерфейсы</a>
            </li>
            <li class="menu-item">
                <a href="/vlan-info">Информация о VLAN</a>
            </li>
            <li class="menu-item has-submenu">
                <a href="#"><i class="fas fa-table"></i> Вывод таблиц</a>
                <ul class="submenu">
                    <li class="menu-item">
                        <a href="/routing-table">Таблица маршрутизации</a>
                    </li>
                    <li class="menu-item">
                        <a href="/mac-table">Таблица коммутации</a>
                    </li>
                    <!-- Остальные пункты -->
                </ul>
            </li>
        </ul>
    </div>

    <!-- Основное содержимое -->
    <div class="main-content">
        <div class="container">
            <!-- Заголовок -->
            <header class="dashboard-header">
                <h1 class="dashboard-title">
                    <i class="fas fa-network-wired"></i> {{ device_status.configuration.hostname }}
                    <span class="device-ip">{{ device_data.ip_address }}</span>
                </h1>
                <div class="dashboard-actions">
                    <a href="/connect-device" class="btn btn-refresh">
                        <i class="fas fa-sync-alt"></i> Обновить
                    </a>
                </div>
            </header>

            <!-- Мониторинг системы -->
            <section class="monitoring-section">
                <h2 class="section-title">
                    <i class="fas fa-chart-line"></i> Мониторинг системы
                </h2>
                
                <div class="metrics-grid">
                    <!-- CPU -->
                    <div class="metric-card cpu-card">
                        <div class="metric-header">
                            <i class="fas fa-microchip"></i>
                            <h3>Загрузка CPU</h3>
                        </div>
                        <div class="metric-value">{{ device_status.monitoring.cpu_load }}</div>
                        <div class="metric-progress">
                            <div class="progress-bar" style="width: {{ device_status.monitoring.cpu_load|replace('%','')|default(0, true)|int }}%"></div>
                        </div>
                        <div class="metric-footer">
                            <span class="metric-label">5-секундная нагрузка</span>
                        </div>
                    </div>
                    
                    <!-- Память -->
                    <div class="metric-card memory-card">
                        <div class="metric-header">
                            <i class="fas fa-memory"></i>
                            <h3>Использование памяти</h3>
                        </div>
                        <div class="metric-value">
                            {{ device_status.monitoring.memory_usage.split('(')[0] }}
                            {% if '(' in device_status.monitoring.memory_usage %}
                            <span class="metric-percent">{{ device_status.monitoring.memory_usage.split('(')[1] }}</span>
                            {% endif %}
                        </div>
                        <div class="metric-progress">
                            <div class="progress-bar" style="width: {{ device_status.monitoring.memory_usage.split('(')[1]|replace('%)','')|default(0, true)|int }}%"></div>
                        </div>
                        <div class="metric-footer">
                            <span class="metric-label">Использовано/Всего</span>
                        </div>
                    </div>
                    
                    <!-- Температура -->
                    <div class="metric-card temp-card">
                        <div class="metric-header">
                            <i class="fas fa-thermometer-half"></i>
                            <h3>Температура</h3>
                        </div>
                        <div class="metric-value">{{ device_status.monitoring.temperature }}</div>
                        <div class="metric-progress">
                            <div class="progress-bar" style="width: {{ device_status.monitoring.temperature|replace('°C','')|default(0, true)|float / 100 * 100 }}%"></div>
                        </div>
                        <div class="metric-footer">
                            <span class="metric-label">Системная</span>
                        </div>
                    </div>
                </div>
            </section>

            <!-- Основная информация -->
            <section class="info-section">
                <h2 class="section-title">
                    <i class="fas fa-info-circle"></i> Основная информация
                </h2>
            
                <div class="info-grid">
                    <div class="info-card">
                        <div class="info-icon">
                            <i class="fas fa-cog"></i>
                        </div>
                        <div class="info-content">
                            <h3>Версия ПО</h3>
                            <p>{{ device_status.configuration.software_version }}</p>
                        </div>
                    </div>
                    
                    <div class="info-card">
                        <div class="info-icon">
                            <i class="fas fa-route"></i>
                        </div>
                        <div class="info-content">
                            <h3>Шлюз</h3>
                            <p>{{ device_status.configuration.gateway }}</p>
                        </div>
                    </div>
                    
                    <div class="info-card">
                        <div class="info-icon">
                            <i class="fas fa-clock"></i>
                        </div>
                        <div class="info-content">
                            <h3>Время работы</h3>
                            <p>{{ device_status.configuration.uptime }}</p>
                        </div>
                    </div>
                    {% if device_data.device_type.lower() == 'huawei' %}
                    <div class="info-card">
                        <div class="info-icon">
                            <i class="fas fa-id-card"></i>
                        </div>
                        <div class="info-content">
                            <h3>Серийный номер</h3>
                            <p>210231{{ range(1, 10000)|random }}ABCD</p>
                        </div>
                    </div>
                    {% endif %}
                </div>
            </section>

            <div class="last-update">
                <i class="fas fa-clock"></i> Последнее обновление: {{ last_update }}
            </div>
        </div>
    </div>

    <!-- Font Awesome для иконок -->
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.15.4/css/all.min.css">
</body>
</html>


================================================================================
Ф: C:\Users\yatma\Documents\Daytona-main + Huawei\templates\error.html
: 2003 bytes
Т : 04/08/2025 19:03:35
================================================================================


<!DOCTYPE html>
<html lang="ru">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Ошибка подключения</title>
    <style>
        /* Общие стили как в login.html */
        body {
            background-color: #f5f7fa;
            display: flex;
            justify-content: center;
            align-items: center;
            min-height: 100vh;
            padding: 20px;
        }
        
        .error-card {
            background: white;
            border-radius: 12px;
            box-shadow: 0 10px 30px rgba(0, 0, 0, 0.1);
            width: 100%;
            max-width: 450px;
            padding: 40px;
            text-align: center;
        }
        
        .error-icon {
            color: #ef233c;
            font-size: 48px;
            margin-bottom: 20px;
        }
        
        h1 {
            color: #212529;
            margin-bottom: 20px;
        }
        
        .error-message {
            background: #fff5f5;
            border-left: 4px solid #ef233c;
            padding: 15px;
            margin: 20px 0;
            text-align: left;
            border-radius: 4px;
            white-space: pre-wrap;
            font-family: monospace;
        }
        
        .back-btn {
            display: inline-block;
            padding: 12px 24px;
            background-color: #4361ee;
            color: white;
            text-decoration: none;
            border-radius: 8px;
            font-weight: 500;
            transition: background 0.3s;
        }
        
        .back-btn:hover {
            background-color: #3a56d4;
        }
    </style>
</head>
<body>
    <div class="error-card">
        <div class="error-icon">⚠️</div>
        <h1>Ошибка подключения</h1>
        <div class="error-message">{{ error_message }}</div>
        <a href="/" class="back-btn">Попробовать снова</a>
    </div>
</body>
</html>


================================================================================
Ф: C:\Users\yatma\Documents\Daytona-main + Huawei\templates\interfaces.html
: 28007 bytes
Т : 04/11/2025 21:59:43
================================================================================


<!DOCTYPE html>
<html lang="ru">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Интерфейсы устройства</title>
    <link rel="stylesheet" href="{{ url_for('static', filename='css/styles.css') }}">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.15.4/css/all.min.css">
</head>
<body>
    <!-- Боковое меню -->
    <div class="sidebar">
        <div class="sidebar-header">
            <h2>Меню</h2>
        </div>
        <ul class="sidebar-menu">
            <li class="menu-item">
                <a href="/device-status">Обзор системы</a>
            </li>
            <li class="menu-item active">
                <a href="/interfaces">Интерфейсы</a>
            </li>
            <li class="menu-item">
                <a href="/interface-details">Детали интерфейса</a>
            </li>
            <li class="menu-item">
                <a href="/vlan-info">Информация о VLAN</a>
            </li>
            <li class="menu-item">
                <a href="/vlan-details">Данные о конкретном VLAN</a>
            </li>
        </ul>
    </div>

    <!-- Основное содержимое -->
    <div class="main-content">
        <div class="container">
            <header class="dashboard-header">
                <h1 class="dashboard-title">
                    <i class="fas fa-network-wired"></i> Интерфейсы
                </h1>
            </header>

            <!-- Таблица интерфейсов -->
            <div class="card">
                <table class="interface-table">
                    <thead>
                        <tr>
                            <th>Порт</th>
                            <th>Описание</th>
                            <th>Статус</th>
                            <th>VLAN</th>
                            <th>Дуплекс</th>
                            <th>Скорость</th>
                            <th>Действия</th>
                        </tr>
                    </thead>
                    <tbody>
                        {% for intf in interfaces %}
                        <tr>
                            <td>{{ intf.name }}</td>
                            <td>{{ intf.description }}</td>
                            <td class="status-{{ intf.status }}">
                                {{ intf.status|upper }}
                            </td>
                            <td>{{ intf.vlan }}</td>
                            <td>{{ intf.duplex }}</td>
                            <td>{{ intf.speed }}</td>
                            <td>
                                <button class="btn-edit" onclick="openEditModal('{{ intf.name }}')">
                                    <i class="fas fa-edit"></i> Редактировать
                                </button>
                            </td>
                        </tr>
                        {% endfor %}
                    </tbody>
                </table>
            </div>

            <div class="card" style="margin-top: 30px;">
                <h2><i class="fas fa-plus-circle"></i> Создать новый интерфейс</h2>
                
                <form id="createInterfaceForm">
                    <div class="form-grid">
                        <!-- Основные параметры -->
                        <div class="form-group">
                            <label for="interfaceType">Тип интерфейса:</label>
                            <select id="interfaceType" class="form-control" required>
                                <option value="">-- Выберите тип --</option>
                                <option value="physical">Физический (Gig0/1)</option>
                                <option value="logical">Логический (Loopback0)</option>
                                <option value="svi">SVI (Vlan10)</option>
                            </select>
                        </div>
                        
                        <div class="form-group">
                            <label for="interfaceNumber">Номер интерфейса:</label>
                            <input type="text" id="interfaceNumber" class="form-control" required 
                                   placeholder="Например: 0/1 для Gig0/1">
                        </div>
                        
                        <div class="form-group">
                            <label for="interfaceIp">IP-адрес:</label>
                            <input type="text" id="interfaceIp" class="form-control" 
                                   placeholder="192.168.1.1">
                        </div>
                        
                        <div class="form-group">
                            <label for="interfaceNetmask">Маска подсети:</label>
                            <input type="text" id="interfaceNetmask" class="form-control" 
                                   placeholder="255.255.255.0 или 24">
                        </div>
                        
                        <div class="form-group">
                            <label for="interfaceStatus">Статус:</label>
                            <select id="interfaceStatus" class="form-control">
                                <option value="up">Up (включен)</option>
                                <option value="down">Down (выключен)</option>
                            </select>
                        </div>
                        
                        <!-- Раскрывающиеся дополнительные параметры -->
                        <div class="form-group full-width">
                            <button type="button" class="btn-toggle-params" onclick="toggleAdditionalParams()">
                                <i class="fas fa-cog"></i> Дополнительные параметры 
                                <i class="fas fa-chevron-down" id="paramsChevron"></i>
                            </button>
                            
                            <div id="additionalParams" style="display: none; margin-top: 15px; padding: 15px; background: #f9f9f9; border-radius: 8px;">
                                <div class="form-grid">
                                    <div class="form-group">
                                        <label for="interfaceDescription">Описание:</label>
                                        <input type="text" id="interfaceDescription" class="form-control">
                                    </div>
                                    
                                    <div class="form-group">
                                        <label for="interfaceMtu">MTU (576-9216):</label>
                                        <input type="number" id="interfaceMtu" class="form-control" min="576" max="9216" value="1500">
                                    </div>
                                    
                                    <div class="form-group">
                                        <label for="interfaceBandwidth">Полоса пропускания (Kbps):</label>
                                        <input type="number" id="interfaceBandwidth" class="form-control" min="1" value="100000">
                                    </div>
                                    
                                    <div class="form-group">
                                        <label for="interfaceDuplex">Дуплекс:</label>
                                        <select id="interfaceDuplex" class="form-control">
                                            <option value="auto">Auto</option>
                                            <option value="full">Full</option>
                                            <option value="half">Half</option>
                                        </select>
                                    </div>
                                    
                                    <div class="form-group">
                                        <label for="interfaceVlan">VLAN (для access):</label>
                                        <input type="number" id="interfaceVlan" class="form-control" min="1" max="4094">
                                    </div>
                                    
                                    <div class="form-group">
                                        <label for="interfaceNativeVlan">Native VLAN (для trunk):</label>
                                        <input type="number" id="interfaceNativeVlan" class="form-control" min="1" max="4094" value="1">
                                    </div>
                                </div>
                            </div>
                        </div>
                        
                        <div class="form-group full-width form-actions">
                            <button type="button" class="btn btn-cancel" onclick="resetInterfaceForm()">
                                <i class="fas fa-times"></i> Отмена
                            </button>
                            <button type="submit" class="btn btn-primary">
                                <i class="fas fa-save"></i> Создать интерфейс
                            </button>
                        </div>
                    </div>
                </form>
            </div>

        </div>
    </div>

    <!-- Модальное окно редактирования -->
    <div id="editModal" class="modal">
        <div class="modal-content">
            <span class="close" onclick="closeModal()">&times;</span>
            <h2>Редактирование интерфейса <span id="modalInterfaceName"></span></h2>
            
            <form id="interfaceForm">
                <div class="form-group">
                    <label for="description">Описание:</label>
                    <input type="text" id="description" name="description">
                </div>
                
                <div class="form-group">
                    <label for="status">Статус:</label>
                    <select id="status" name="status">
                        <option value="up">Up</option>
                        <option value="down">Down</option>
                        <option value="disabled">Disabled</option>
                    </select>
                </div>
                
                <div class="form-group">
                    <label for="vlan">VLAN:</label>
                    <input type="number" id="vlan" name="vlan" min="1" max="4094">
                </div>
                
                <div class="form-group">
                    <label for="duplex">Дуплекс:</label>
                    <select id="duplex" name="duplex">
                        <option value="auto">Auto</option>
                        <option value="full">Full</option>
                        <option value="half">Half</option>
                    </select>
                </div>
                
                <div class="form-group">
                    <label for="speed">Скорость:</label>
                    <select id="speed" name="speed">
                        <option value="auto">Auto</option>
                        <option value="10">10 Mbps</option>
                        <option value="100">100 Mbps</option>
                        <option value="1000">1 Gbps</option>
                    </select>
                </div>
                
                <div class="form-actions">
                    <button type="button" class="btn btn-cancel" onclick="closeModal()">Отмена</button>
                    <button type="submit" class="btn btn-save">Сохранить</button>
                </div>
            </form>
        </div>
    </div>

    <!-- В templates/interfaces.html -->
    <script>
        // ========== Общие функции ==========
        function showAlert(type, message, duration = 5000) {
            const alertDiv = document.createElement('div');
            alertDiv.className = `alert alert-${type}`;
            alertDiv.innerHTML = `
                <span>${message}</span>
                <button onclick="this.parentElement.remove()">&times;</button>
            `;
            document.querySelector('.container').prepend(alertDiv);
            setTimeout(() => {
                alertDiv.style.opacity = '0';
                setTimeout(() => alertDiv.remove(), 300);
            }, duration);
        }
    
        function showLoading(message = 'Применение изменений...') {
            const loadingOverlay = document.createElement('div');
            loadingOverlay.className = 'loading-overlay';
            loadingOverlay.innerHTML = `
                <div class="loading-spinner">
                    <i class="fas fa-spinner fa-spin"></i>
                    <p>${message}</p>
                </div>
            `;
            document.body.appendChild(loadingOverlay);
            return loadingOverlay;
        }
    
        // ========== Функции для работы с интерфейсами ==========
        function updateInterfaceRow(data) {
    const rows = document.querySelectorAll('.interface-table tbody tr');
    for (const row of rows) {
        // Удаляем пробелы для сравнения (GigabitEthernet 0/1 -> GigabitEthernet0/1)
        const rowName = row.cells[0].textContent.replace(/\s+/g, '');
        const dataName = data.interface_name.replace(/\s+/g, '');
        
        if (rowName === dataName) {
            // Форматируем имя с пробелом для отображения
            row.cells[0].textContent = format_interface_display_name(data.interface_name);
            row.cells[1].textContent = data.description;
            
            // Обновляем статус (и класс)
            const statusCell = row.cells[2];
            statusCell.textContent = data.status.toUpperCase();
            statusCell.className = 'status-' + data.status;
            
            row.cells[3].textContent = data.vlan;
            row.cells[4].textContent = data.duplex;
            
            // Форматируем скорость
            let speedText = data.speed;
            if (data.speed !== 'auto') {
                speedText += ' Mbps';
                if (data.speed === '1000') {
                    speedText = '1 Gbps';
                }
            }
            row.cells[5].textContent = speedText;
            
            break;
        }
    }
}
    
        function findInterfaceByName(name) {
            const rows = document.querySelectorAll('.interface-table tbody tr');
            for (const row of rows) {
                if (row.cells[0].textContent === name) {
                    return {
                        name: name,
                        description: row.cells[1].textContent,
                        status: row.cells[2].textContent.toLowerCase().trim(),
                        vlan: parseInt(row.cells[3].textContent),
                        duplex: row.cells[4].textContent.toLowerCase(),
                        speed: row.cells[5].textContent
                    };
                }
            }
            return null;
        }
    
        // ========== Функции модального окна ==========
        function openEditModal(interfaceName) {
            const modal = document.getElementById('editModal');
            document.getElementById('modalInterfaceName').textContent = interfaceName;
            
            const interface = findInterfaceByName(interfaceName);
            if (interface) {
                document.getElementById('description').value = interface.description || '';
                document.getElementById('status').value = interface.status || 'up';
                document.getElementById('vlan').value = interface.vlan || 1;
                document.getElementById('duplex').value = interface.duplex || 'auto';
                document.getElementById('speed').value = interface.speed.split(' ')[0] || 'auto';
            }
            
            modal.style.display = 'block';
        }
    
        function closeModal() {
            document.getElementById('editModal').style.display = 'none';
        }
    
        window.onclick = function(event) {
            const modal = document.getElementById('editModal');
            if (event.target == modal) {
                closeModal();
            }
        }
    
        // ========== Обработчики форм ==========
        document.getElementById('interfaceForm').addEventListener('submit', async function(e) {
            e.preventDefault();
            
            const formData = {
                interface_name: document.getElementById('modalInterfaceName').textContent,
                description: document.getElementById('description').value,
                status: document.getElementById('status').value,
                vlan: document.getElementById('vlan').value,
                duplex: document.getElementById('duplex').value,
                speed: document.getElementById('speed').value
            };
    
            const submitBtn = document.querySelector('#interfaceForm .btn-save');
            const originalBtnText = submitBtn.innerHTML;
            submitBtn.disabled = true;
            submitBtn.innerHTML = '<i class="fas fa-spinner fa-spin"></i> Сохранение...';
            
            const loading = showLoading('Сохранение изменений...');
    
            try {
                const response = await fetch('/update-interface', {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                    },
                    body: JSON.stringify(formData)
                });
    
                const data = await response.json();
                
                if (!response.ok) throw new Error(data.message || 'Ошибка сервера');
                if (!data.success) throw new Error(data.message || 'Не удалось сохранить изменения');
    
                updateInterfaceRow(formData);
                closeModal();
                showAlert('success', 'Изменения успешно сохранены!');
            } catch (error) {
                console.error('Ошибка:', error);
                showAlert('error', 'Ошибка при сохранении: ' + error.message);
            } finally {
                loading.remove();
                submitBtn.disabled = false;
                submitBtn.innerHTML = originalBtnText;
            }
        });
    
        // ========== Функции создания интерфейса ==========
        function toggleAdditionalParams() {
            const params = document.getElementById('additionalParams');
            const chevron = document.getElementById('paramsChevron');
            
            if (params.style.display === 'none') {
                params.style.display = 'block';
                chevron.classList.replace('fa-chevron-down', 'fa-chevron-up');
            } else {
                params.style.display = 'none';
                chevron.classList.replace('fa-chevron-up', 'fa-chevron-down');
            }
        }
    
        function resetInterfaceForm() {
            document.getElementById('createInterfaceForm').reset();
            document.getElementById('additionalParams').style.display = 'none';
            document.getElementById('paramsChevron').className = 'fas fa-chevron-down';
        }
    
        function validateIpAddress(ip) {
            return /^\d{1,3}\.\d{1,3}\.\d{1,3}\.\d{1,3}$/.test(ip);
        }
    
        function validateNetmask(netmask) {
            return /^(\d{1,3}\.\d{1,3}\.\d{1,3}\.\d{1,3}|\d{1,2})$/.test(netmask);
        }
    
        document.getElementById('createInterfaceForm').addEventListener('submit', async function(e) {
            e.preventDefault();
            
            const interfaceType = document.getElementById('interfaceType').value;
            const interfaceNumber = document.getElementById('interfaceNumber').value.trim();
            const ipAddress = document.getElementById('interfaceIp').value.trim();
            const netmask = document.getElementById('interfaceNetmask').value.trim();
    
            // Валидация
            if (!interfaceType || !interfaceNumber) {
                showAlert('error', 'Заполните обязательные поля');
                return;
            }
    
            if (ipAddress && !validateIpAddress(ipAddress)) {
                showAlert('error', 'Введите корректный IP-адрес');
                return;
            }
    
            if (netmask && !validateNetmask(netmask)) {
                showAlert('error', 'Введите корректную маску подсети (формат: 255.255.255.0 или 24)');
                return;
            }
    
            // Формируем имя интерфейса
            let interfaceName;
            switch(interfaceType) {
    case 'physical':
        interfaceName = `GigabitEthernet${interfaceNumber.replace(/\s+/g, '')}`;
        break;
    case 'logical':
        interfaceName = `Loopback${interfaceNumber.replace(/\s+/g, '')}`;
        break;
    case 'svi':
        interfaceName = `Vlan${interfaceNumber.replace(/\s+/g, '')}`;
        break;
    default:
        showAlert('error', 'Неверный тип интерфейса');
        return;
}
    
            // Собираем данные формы
            const formData = {
                name: interfaceName,
                type: interfaceType,
                ip_address: ipAddress,
                netmask: netmask,
                status: document.getElementById('interfaceStatus').value,
                description: document.getElementById('interfaceDescription').value.trim(),
                mtu: document.getElementById('interfaceMtu').value,
                bandwidth: document.getElementById('interfaceBandwidth').value,
                duplex: document.getElementById('interfaceDuplex').value,
                vlan: document.getElementById('interfaceVlan').value,
                native_vlan: document.getElementById('interfaceNativeVlan').value
            };
    
            // Для SVI интерфейсов корректируем данные
            if (interfaceType === 'svi') {
                delete formData.duplex;
                delete formData.bandwidth;
                if (!formData.ip_address) {
                    showAlert('error', 'Для SVI интерфейса необходимо указать IP-адрес');
                    return;
                }
            }
    
            const submitBtn = this.querySelector('button[type="submit"]');
            const originalBtnText = submitBtn.innerHTML;
            submitBtn.disabled = true;
            submitBtn.innerHTML = '<i class="fas fa-spinner fa-spin"></i> Создание...';
            
            const loading = showLoading('Создание интерфейса...');
    
            try {
                const response = await fetch('/create-interface', {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                    },
                    body: JSON.stringify(formData)
                });
    
                const data = await response.json();
                
                if (!response.ok) throw new Error(data.message || 'Ошибка сервера');
                if (!data.success) throw new Error(data.message || 'Не удалось создать интерфейс');
    
                showAlert('success', `Интерфейс ${interfaceName} успешно создан!`);
                resetInterfaceForm();
                
                // Обновляем таблицу через 1 секунду
                setTimeout(() => window.location.reload(), 1000);
            } catch (error) {
                console.error('Ошибка:', error);
                showAlert('error', error.message);
            } finally {
                loading.remove();
                submitBtn.disabled = false;
                submitBtn.innerHTML = originalBtnText;
            }
        });
    </script>

    
<style>
    .form-grid {
        display: grid;
        grid-template-columns: repeat(auto-fill, minmax(250px, 1fr));
        gap: 15px;
    }
    
    .form-group {
        margin-bottom: 15px;
    }
    
    .form-group.full-width {
        grid-column: 1 / -1;
    }
    
    .form-control {
        width: 100%;
        padding: 10px;
        border: 1px solid #ddd;
        border-radius: 4px;
        font-size: 14px;
    }
    
    .btn-toggle-params {
        background: none;
        border: none;
        color: var(--primary);
        cursor: pointer;
        padding: 8px 0;
        font-size: 14px;
        display: flex;
        align-items: center;
        gap: 8px;
    }
    
    .btn-toggle-params:hover {
        color: var(--primary-dark);
    }
    
    .form-actions {
        display: flex;
        justify-content: flex-end;
        gap: 10px;
        margin-top: 20px;
        border-top: 1px solid #eee;
        padding-top: 20px;
    }
    
    .btn {
        padding: 10px 20px;
        border-radius: 4px;
        cursor: pointer;
        font-size: 14px;
        display: inline-flex;
        align-items: center;
        gap: 8px;
    }
    
    .btn-primary {
        background-color: var(--primary);
        color: white;
        border: none;
    }
    
    .btn-primary:hover {
        background-color: var(--primary-dark);
    }
    
    .btn-cancel {
        background-color: #f0f0f0;
        color: #555;
        border: 1px solid #ddd;
    }
    
    .btn-cancel:hover {
        background-color: #e0e0e0;
    }
    .alert {
    padding: 12px 20px;
    border-radius: 4px;
    margin-bottom: 20px;
    display: flex;
    justify-content: space-between;
    align-items: center;
    box-shadow: 0 2px 10px rgba(0,0,0,0.1);
    transition: opacity 0.3s ease;
    position: relative;
    overflow: hidden;
}

.alert::after {
    content: '';
    position: absolute;
    bottom: 0;
    left: 0;
    height: 4px;
    background-color: currentColor;
    opacity: 0.2;
    width: 100%;
}

.alert-success {
    background-color: #e8f5e9;
    color: #2e7d32;
    border-left: 4px solid #2e7d32;
}

.alert-error {
    background-color: #ffebee;
    color: #c62828;
    border-left: 4px solid #c62828;
}

.alert button {
    background: none;
    border: none;
    font-size: 18px;
    cursor: pointer;
    color: inherit;
    opacity: 0.7;
    transition: opacity 0.2s;
    padding: 0;
    margin-left: 15px;
}

.alert button:hover {
    opacity: 1;
}
</style>
</body>
</html>


================================================================================
Ф: C:\Users\yatma\Documents\Daytona-main + Huawei\templates\interface_details.html
: 11106 bytes
Т : 04/11/2025 21:10:54
================================================================================


<!DOCTYPE html>
<html lang="ru">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Детали интерфейса</title>
    <link rel="stylesheet" href="{{ url_for('static', filename='css/styles.css') }}">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.15.4/css/all.min.css">
    <style>
        .interface-details {
            margin-top: 20px;
        }
        .detail-card {
            background: white;
            border-radius: 8px;
            padding: 20px;
            margin-bottom: 20px;
            box-shadow: 0 2px 4px rgba(0,0,0,0.1);
        }
        .detail-row {
            display: flex;
            margin-bottom: 10px;
            padding-bottom: 10px;
            border-bottom: 1px solid #eee;
        }
        .detail-label {
            font-weight: bold;
            width: 200px;
            color: var(--dark);
        }
        .detail-value {
            flex: 1;
        }
        .status-up {
            color: var(--success);
        }
        .status-down {
            color: var(--danger);
        }
        select {
            padding: 8px 12px;
            border-radius: 4px;
            border: 1px solid #ddd;
            width: 100%;
            max-width: 300px;
        }
    </style>
</head>
<body>
    <!-- Боковое меню -->
    <div class="sidebar">
        <div class="sidebar-header">
            <h2>Меню</h2>
        </div>
        <ul class="sidebar-menu">
            <li class="menu-item">
                <a href="/device-status">Обзор системы</a>
            </li>
            <li class="menu-item">
                <a href="/interfaces">Интерфейсы</a>
            </li>
            <li class="menu-item active">
                <a href="/interface-details">Детали интерфейса</a>
            </li>
            <li class="menu-item">
                <a href="/vlan-info">Информация о VLAN</a>
            </li>
            <li class="menu-item">
                <a href="/vlan-details">Данные о конкретном VLAN</a>
            </li>
        </ul>
    </div>

    <!-- Основное содержимое -->
    <div class="main-content">
        <div class="container">
            <header class="dashboard-header">
                <h1 class="dashboard-title">
                    <i class="fas fa-network-wired"></i> Детальная информация интерфейса
                </h1>
            </header>

            <div class="card">
                <h2>Выберите интерфейс</h2>
                <select id="interfaceSelect" onchange="loadInterfaceDetails(this.value)">
                    <option value="">-- Выберите интерфейс --</option>
                    {% for intf in interfaces %}
                    <option value="{{ intf.name }}">{{ intf.name }}</option>
                    {% endfor %}
                </select>
            </div>

            <div id="interfaceDetails" class="interface-details-container" style="display: none;">
                <div class="interface-detail-card">
                    <div class="detail-section">
                        <h3 class="detail-section-title">
                            <i class="fas fa-info-circle"></i> Основная информация
                        </h3>
                        <div class="detail-grid">
                            <div class="detail-label">Имя интерфейса:</div>
                            <div class="detail-value" id="interfaceName"></div>
                            
                            <div class="detail-label">Описание:</div>
                            <div class="detail-value" id="interfaceDescription">Не указано</div>
                            
                            <div class="detail-label">Тип:</div>
                            <div class="detail-value" id="interfaceType">N/A</div>
                            
                            <div class="detail-label">Статус:</div>
                            <div class="detail-value">
                                <span id="interfaceStatus" class="status-badge status-down">Down</span>
                            </div>
                        </div>
                    </div>
                </div>
            
                <div class="interface-detail-card">
                    <div class="detail-section">
                        <h3 class="detail-section-title">
                            <i class="fas fa-tachometer-alt"></i> Характеристики
                        </h3>
                        <div class="detail-grid">
                            <div class="detail-label">Скорость:</div>
                            <div class="detail-value" id="interfaceSpeed">N/A</div>
                            
                            <div class="detail-label">Дуплекс:</div>
                            <div class="detail-value" id="interfaceDuplex">N/A</div>
                            
                            <div class="detail-label">MTU:</div>
                            <div class="detail-value" id="interfaceMtu">N/A</div>
                            
                            <div class="detail-label">MAC-адрес:</div>
                            <div class="detail-value" id="interfaceMac">N/A</div>
                        </div>
                    </div>
                </div>
            
                <div class="interface-detail-card">
                    <div class="detail-section">
                        <h3 class="detail-section-title">
                            <i class="fas fa-network-wired"></i> IP-настройки
                        </h3>
                        <div class="detail-grid">
                            <div class="detail-label">IP-адрес:</div>
                            <div class="detail-value" id="interfaceIp">Не назначен</div>
                            
                            <div class="detail-label">Маска:</div>
                            <div class="detail-value" id="interfaceNetmask">N/A</div>
                            
                            <div class="detail-label">Широковещательный:</div>
                            <div class="detail-value" id="interfaceBroadcast">N/A</div>
                        </div>
                    </div>
                </div>
            
                <div class="interface-detail-card">
                    <div class="detail-section">
                        <h3 class="detail-section-title">
                            <i class="fas fa-chart-line"></i> Статистика
                        </h3>
                        <div class="detail-grid">
                            <div class="detail-label">Входящий трафик:</div>
                            <div class="detail-value" id="interfaceInputRate">N/A</div>
                            
                            <div class="detail-label">Исходящий трафик:</div>
                            <div class="detail-value" id="interfaceOutputRate">N/A</div>
                            
                            <div class="detail-label">Вход. ошибки:</div>
                            <div class="detail-value" id="interfaceInputErrors">0</div>
                            
                            <div class="detail-label">Выход. ошибки:</div>
                            <div class="detail-value" id="interfaceOutputErrors">0</div>
                            
                            <div class="detail-label">Последний вход:</div>
                            <div class="detail-value" id="interfaceLastInput">N/A</div>
                            
                            <div class="detail-label">Последний выход:</div>
                            <div class="detail-value" id="interfaceLastOutput">N/A</div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <script>
        function loadInterfaceDetails(interfaceName) {
    if (!interfaceName) {
        document.getElementById('interfaceDetails').style.display = 'none';
        return;
    }

    fetch(`/get-interface-details?name=${encodeURIComponent(interfaceName)}`)
        .then(response => response.json())
        .then(data => {
            const detailsContainer = document.getElementById('interfaceDetails');
            detailsContainer.style.display = 'grid';
            
            // Основная информация
            document.getElementById('interfaceName').textContent = data.name;
            document.getElementById('interfaceDescription').textContent = data.description || 'Не указано';
            document.getElementById('interfaceType').textContent = data.type || 'N/A';
            
            // Статус
            const statusBadge = document.getElementById('interfaceStatus');
            statusBadge.textContent = data.status === 'up' ? 'Active' : 'Down';
            statusBadge.className = `status-badge status-${data.status}`;
            
            // Характеристики
            document.getElementById('interfaceSpeed').textContent = data.speed || 'N/A';
            document.getElementById('interfaceDuplex').textContent = data.duplex || 'N/A';
            document.getElementById('interfaceMtu').textContent = data.mtu || '1500';
            document.getElementById('interfaceMac').textContent = data.mac_address || 'N/A';
            
            // IP-настройки
            document.getElementById('interfaceIp').textContent = data.ip_address || 'Не назначен';
            document.getElementById('interfaceNetmask').textContent = data.netmask || 'N/A';
            
            // Статистика
            document.getElementById('interfaceInputRate').textContent = data.input_rate || 'N/A';
            document.getElementById('interfaceOutputRate').textContent = data.output_rate || 'N/A';
            document.getElementById('interfaceInputErrors').textContent = data.input_errors || '0';
            document.getElementById('interfaceOutputErrors').textContent = data.output_errors || '0';
            document.getElementById('interfaceLastInput').textContent = data.last_input || 'N/A';
            document.getElementById('interfaceLastOutput').textContent = data.last_output || 'N/A';
        })
        .catch(error => {
            console.error('Error:', error);
            alert('Ошибка при загрузке данных интерфейса');
        });
}
    </script>
</body>
</html>


================================================================================
Ф: C:\Users\yatma\Documents\Daytona-main + Huawei\templates\login.html
: 6035 bytes
Т : 04/09/2025 19:32:26
================================================================================


<!DOCTYPE html>
<html lang="ru">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Подключение к устройству</title>
    <style>
        :root {
            --primary: #4361ee;
            --error: #ef233c;
            --success: #2ecc71;
            --light: #f8f9fa;
            --dark: #212529;
            --gray: #6c757d;
        }
        
        * {
            box-sizing: border-box;
            margin: 0;
            padding: 0;
            font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
        }
        
        body {
            background-color: #f5f7fa;
            display: flex;
            justify-content: center;
            align-items: center;
            min-height: 100vh;
            padding: 20px;
        }
        
        .login-card {
            background: white;
            border-radius: 12px;
            box-shadow: 0 10px 30px rgba(0, 0, 0, 0.1);
            width: 100%;
            max-width: 450px;
            padding: 40px;
            position: relative;
            overflow: hidden;
            transition: all 0.3s ease;
        }
        
        .login-card.loading {
            opacity: 0.8;
        }
        
        h2 {
            color: var(--dark);
            margin-bottom: 30px;
            text-align: center;
            font-weight: 600;
        }
        
        .form-group {
            margin-bottom: 20px;
        }
        
        label {
            display: block;
            margin-bottom: 8px;
            color: var(--dark);
            font-weight: 500;
            font-size: 14px;
        }
        
        input, select {
            width: 100%;
            padding: 12px 15px;
            border: 1px solid #e0e0e0;
            border-radius: 8px;
            font-size: 15px;
            transition: border 0.3s;
        }
        
        input:focus, select:focus {
            outline: none;
            border-color: var(--primary);
            box-shadow: 0 0 0 3px rgba(67, 97, 238, 0.2);
        }
        
        button {
            width: 100%;
            padding: 14px;
            background-color: var(--primary);
            color: white;
            border: none;
            border-radius: 8px;
            font-size: 16px;
            font-weight: 500;
            cursor: pointer;
            transition: background 0.3s;
            margin-top: 10px;
        }
        
        button:hover {
            background-color: #3a56d4;
        }
        
        button:disabled {
            background-color: var(--gray);
            cursor: not-allowed;
        }
        
        /* Стили для загрузчика */
        .loader-container {
            position: absolute;
            top: 0;
            left: 0;
            right: 0;
            bottom: 0;
            background: rgba(255, 255, 255, 0.8);
            display: none;
            justify-content: center;
            align-items: center;
            z-index: 10;
            border-radius: 12px;
        }
        
        .loader {
            width: 48px;
            height: 48px;
            border: 5px solid rgba(67, 97, 238, 0.2);
            border-radius: 50%;
            border-top-color: var(--primary);
            animation: spin 1s ease-in-out infinite;
        }
        
        @keyframes spin {
            to { transform: rotate(360deg); }
        }
    </style>
</head>
<body>
    <div class="login-card" id="loginCard">
        <div class="loader-container" id="loader">
            <div class="loader"></div>
        </div>
        
        <h2>Подключение к сетевому устройству</h2>
        
        <form id="authForm" method="POST" action="/">
            <div class="form-group">
                <label for="username">Логин:</label>
                <input type="text" id="username" name="username" required>
            </div>
            
            <div class="form-group">
                <label for="password">Пароль:</label>
                <input type="password" id="password" name="password" required>
            </div>

            <div class="form-group">
                <label for="secret">Enable Password (если требуется):</label>
                <input type="password" id="secret" name="secret">
            </div>
            
            <div class="form-group">
                <label for="ip_address">IP-адрес устройства:</label>
                <input type="text" id="ip_address" name="ip_address" required>
            </div>
            
            <div class="form-group">
                <label for="device_type">Тип устройства:</label>
                <select id="device_type" name="device_type" required>
                    <option value="">-- Выберите тип --</option>
                    <option value="Cisco">Cisco</option>
                    <option value="Huawei">Huawei</option>
                    <option value="Eltex">Eltex</option>
                </select>
            </div>
            
            <button type="submit" id="submitBtn">Подключиться</button>
        </form>
    </div>

    <script>
        document.getElementById('authForm').addEventListener('submit', function(e) {
            const form = this;
            const loader = document.getElementById('loader');
            const loginCard = document.getElementById('loginCard');
            const submitBtn = document.getElementById('submitBtn');
            
            // Показываем загрузчик
            loader.style.display = 'flex';
            loginCard.classList.add('loading');
            submitBtn.disabled = true;
            
            // Продолжаем стандартную отправку формы
            // (все перенаправления и обработка ошибок сохраняются)
        });
    </script>
</body>
</html>
